<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on XiaochenCui&#39;s Blog</title>
    <link>https://cuixiaochen.com/posts/</link>
    <description>Recent content in Posts on XiaochenCui&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Aug 2021 10:45:16 +0800</lastBuildDate><atom:link href="https://cuixiaochen.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advanced Perf</title>
      <link>https://cuixiaochen.com/posts/perf-1/</link>
      <pubDate>Fri, 13 Aug 2021 10:45:16 +0800</pubDate>
      
      <guid>https://cuixiaochen.com/posts/perf-1/</guid>
      <description>Perf Events Manual    Event Internal Name Official Explanation My Personal Understanding     task-clock PERF_COUNT_SW_TASK_CLOCK This reports a clock count specific to the task that is running. Task-clock is based only on the time spent on the profiled task.   In the current implementation, cpu-clock is equivalent to task-clock, just ignore it       Reference  perf_event_open(2) - Linux manual page  Using Perf on AMD When doing perf on AMD platform, we found that some events are not counted/supported, such as:</description>
    </item>
    
    <item>
      <title>Simple DB In Rust - Looking Back A Month Later</title>
      <link>https://cuixiaochen.com/posts/simple-db-rust-1/</link>
      <pubDate>Thu, 09 Jul 2020 17:20:59 +0800</pubDate>
      
      <guid>https://cuixiaochen.com/posts/simple-db-rust-1/</guid>
      <description>Time flies, and one month has passed since the project started.
After this month of fighting with rust, I achieved the basic sequential scanning function. Now, it&amp;rsquo;s time to summarize the work and think about how to advance the project completion faster and how to write better quality rust code.
First, I made the mistake of premature abstraction. Since the simple-db-hw project I refer to is written in java, it uses a lot of design patterns and OOP ideas.</description>
    </item>
    
    <item>
      <title>Simple DB In Rust - Started</title>
      <link>https://cuixiaochen.com/posts/simple-db-rust-0/</link>
      <pubDate>Tue, 09 Jun 2020 14:52:55 +0800</pubDate>
      
      <guid>https://cuixiaochen.com/posts/simple-db-rust-0/</guid>
      <description>After spending a lot of time, I finally completed all the tasks of mit 6.830 (source code). Now we almost have a simple database that can perform a series of operations such as querying, storing, and deleting data. The transaction and index has been achieved. We also implemented write-ahead log to prevent data lose from system crash. 99% of the tests (including unit tests and integration tests) can be successfully passed.</description>
    </item>
    
    <item>
      <title>System Research Syllabus</title>
      <link>https://cuixiaochen.com/posts/system-research-syllabus/</link>
      <pubDate>Tue, 08 Oct 2019 13:56:32 +0800</pubDate>
      
      <guid>https://cuixiaochen.com/posts/system-research-syllabus/</guid>
      <description>The knowledge involved in building large-scale system, covering everthing form architecture to algorithms, from macro to micro.
Comments and suggestions are welcomed.
(Content is being sorted out, a little bit confusing right now)
Distributed Systems  Time, Clocks, and the Ordering of Events in a Distributed System The End of an Architectural Era (It’s Time for a Complete Rewrite)  Data Processing  Spark: Cluster Computing with Working Sets  Stream Processing  Storm @Twitter Samza: Stateful Scalable Stream Processing at LinkedIn Drill  SQL Workloads  Presto: SQL on Everything 深入浅出Presto：PB级OLAP引擎 Dremel: Interactive Analysis of Web-Scale Datasets  Distributed Storage System  Atlas: Baidu’s Key-value Storage System for Cloud Data PAST: Persistent and Anonymous Storage in a Peer-to-Peer Networking Environment OceanStore: An Architecture for Global-Scale Persistent Storage Alluxio: A Virtual Distributed File System  Distributed Computation  Ray: A Distributed Framework for Emerging AI Applications Starling: A Scalable Query Engine on Cloud Functions  Database Motivation  A Relational Model of Data for Large Shared Data Banks  History  ☑︎ What Goes Around Comes Around ☑︎ What’s Really New with NewSQL?</description>
    </item>
    
  </channel>
</rss>
